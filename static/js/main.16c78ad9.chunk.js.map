{"version":3,"sources":["firebase.js","Post.js","ImageUpload.js","App.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","auth","storage","Post","postId","user","username","caption","imageUrl","useState","comments","setComments","comment","setComment","useEffect","unsubscribe","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","className","Avatar","alt","src","text","type","placeholder","value","onChange","e","target","disabled","onClick","event","preventDefault","add","displayName","timestamp","FieldValue","serverTimestamp","ImageUpload","progress","setProgress","image","setImage","setCaption","max","files","Button","ref","name","put","on","Math","round","bytesTransferred","totalBytes","error","console","log","alert","message","child","getDownloadURL","then","url","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","App","classes","React","modalStyle","posts","setPosts","open","setOpen","openSignIn","setOpenSignIn","setUsername","email","setEmail","password","setPassword","setUser","onAuthStateChanged","authUser","id","post","Modal","onClose","style","Input","createUserWithEmailAndPassword","updateProfile","catch","signInWithEmailAndPassword","signOut","playing","height","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.16c78ad9.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({ //Initialize the App  = {\r\n    apiKey: \"AIzaSyC7ouBZ24zSNwmjBPZQkX7g3o33xJvDZTk\",\r\n    authDomain: \"instagram-clone-react-87d2b.firebaseapp.com\",\r\n    projectId: \"instagram-clone-react-87d2b\",\r\n    storageBucket: \"instagram-clone-react-87d2b.appspot.com\",\r\n    messagingSenderId: \"156191938959\",\r\n    appId: \"1:156191938959:web:b1b7f7aefe62aa881b93fa\",\r\n    measurementId: \"G-3BLHJQQYZ2\"\r\n}) ;\r\n\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebaseApp.auth();  //login logout\r\nconst storage = firebaseApp.storage();\r\n\r\n\r\nexport {db, auth, storage} ;","// Design Posts\r\nimport React , {useState , useEffect} from 'react'\r\nimport './Post.css'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport { db } from \"./firebase\";\r\nimport firebase from 'firebase';\r\n\r\nfunction Post( { postId, user, username , caption , imageUrl} ) {\r\n\r\n    const [comments, setComments] = useState([]);\r\n    const [comment, setComment] = useState(\"\")\r\n\r\n    useEffect(() => {\r\n        let unsubscribe;\r\n        if (postId) {\r\n          unsubscribe = db\r\n          .collection(\"posts\")\r\n          .doc(postId)\r\n          .collection(\"comments\")\r\n          .orderBy('timestamp','desc')\r\n          .onSnapshot((snapshot) => {\r\n            setComments(snapshot.docs.map((doc) => doc.data()))\r\n          });\r\n        }\r\n        return () => {\r\n          unsubscribe();\r\n        };\r\n      }, [postId]);\r\n\r\n    \r\n    const postComment = (event) => {\r\n        event.preventDefault();\r\n\r\n        db.collection(\"posts\").doc(postId).collection(\"comments\").add({\r\n            text:comment,\r\n            username: user.displayName,\r\n            timestamp:firebase.firestore.FieldValue.serverTimestamp()\r\n          });\r\n        \r\n          setComment('');\r\n        \r\n        }\r\n\r\n    return (\r\n        <div className = \"post\">\r\n            <div className = \"post__header\">\r\n            <Avatar \r\n                className = \"post__avatar\"\r\n                alt = \"Piyu \"\r\n                src = \"https://images.unsplash.com/photo-1545828751-0a3b3a1da949?ixid=MXwxMjA3fDB8MHxzZWFyY2h8MXx8cHJpbmNlc3N8ZW58MHx8MHw%3D&ixlib=rb-1.2.1&w=1000&q=80\"\r\n            />\r\n            <h3> { username } </h3>\r\n            </div>\r\n            \r\n            <img\r\n                className = \"post__image\" \r\n                src = {imageUrl}\r\n                alt = \"post\"\r\n            />\r\n\r\n            <h4 className = \"post__text\"> <strong>  {username} </strong> {caption } </h4>\r\n\r\n            {\r\n                <div className=\"post__comments\">\r\n                    {comments.map((comment) => (\r\n                        <p>\r\n                            <strong>{comment.username}</strong> {comment.text}\r\n                        </p>\r\n\r\n                    ))}\r\n                </div>\r\n            }\r\n\r\n            {user && (\r\n                <form className= \"post__commentBox\">\r\n                    <input \r\n                        className=\"post__input\"\r\n                        type=\"text\"\r\n                        placeholder=\"Add a comment....\"\r\n                        value={comment}\r\n                        onChange={(e) => setComment(e.target.value)}\r\n                    />\r\n                    <button\r\n                        className=\"post__button\"\r\n                        disabled={!comment}\r\n                        type=\"submit\"\r\n                        onClick={postComment}>Post\r\n                        </button>\r\n                </form>\r\n            )}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n","import React from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport {useState} from 'react';\r\nimport { db, storage } from \"./firebase\";\r\nimport firebase from 'firebase';\r\nimport './ImageUpload.css';\r\n\r\n\r\nfunction ImageUpload({username}) {\r\n    const [progress, setProgress] = useState(0);\r\n    const [image,setImage] = useState(null);\r\n    const [caption , setCaption] = useState(\"\");\r\n   \r\n\r\n    const handleChange = (e) => {\r\n        // get the file that you actually selected\r\n        if(e.target.files[0]) {\r\n            setImage(e.target.files[0]);\r\n        }\r\n    };\r\n\r\n    const handleUpload = () => {\r\n        //image.name -> file name \r\n        //images -> creating the folder\r\n        //storage -> access the storage in firebase and get a refrence to folder(images )\r\n        //put(image) -> putting image to the point\r\n\r\n        const uploadTask = storage.ref(`images/${image.name}`).put(image); //uploaded\r\n\r\n        uploadTask.on (\r\n            \"state_changed\", // as the image uploaded keep giving me snapshot \r\n            (snapshot) => {\r\n                //progress function ...\r\n                \r\n                const progress = Math.round (\r\n                    (snapshot.bytesTransferred / snapshot.totalBytes) * 100 \r\n                );  \r\n                setProgress(progress);\r\n            },\r\n            (error) => {\r\n                //Error Function\r\n                console.log(error);\r\n                alert(error.message);\r\n            },\r\n            () => { \r\n                //complete function ...\r\n                //upload image to firebase Storage \r\n                storage //downloaded link\r\n                    .ref(\"images\")  // go to the ref images \r\n                    .child(image.name) // go to the image name child \r\n                    .getDownloadURL() //get me the download URL \r\n                    .then(url => {\r\n                //post image inside of database\r\n                        db.collection(\"posts\").add({\r\n                            //sort all post on correct timings\r\n                            timestamp : firebase.firestore.FieldValue.serverTimestamp(),\r\n                            caption : caption ,\r\n                            imageUrl : url , \r\n                            username : username\r\n                        })\r\n\r\n                        setProgress(0);\r\n                        setCaption(\"\");\r\n                        setImage(null);\r\n                    })\r\n            }\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"imageUpload\">\r\n            {/* I want to have... */}  \r\n            {/* caption input */}\r\n            {/* File picker */}\r\n            {/* Post button  */}\r\n\r\n            <progress className=\"imageUpload_Progress\" value={progress} max=\"100\"/>\r\n            <input \r\n                type = \"text\" \r\n                placeholder = \"Enter a caption...\"\r\n                onChange = {(event)=> setCaption(event.target.value)}  \r\n                value={caption} \r\n            />\r\n\r\n            <input type = \"file\" onChange = {handleChange}/>\r\n\r\n            <Button onClick = {handleUpload}>Upload</Button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImageUpload ","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Post from \"./Post\";\nimport { auth, db } from \"./firebase\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Modal from \"@material-ui/core/Modal\";\nimport Button from \"@material-ui/core/Button\";\nimport { Input } from \"@material-ui/core\";\nimport ImageUpload from \"./ImageUpload\";\nimport ReactPlayer from \"react-player\";\nimport Avatar from '@material-ui/core/Avatar';\n\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n\n  const [posts, setPosts] = useState([]);\n  const [open, setOpen] = useState(false); //sign up\n  const [openSignIn, setOpenSignIn] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      //listen any single time any change happen like login logout\n      if (authUser) {\n        //user has logged in...\n        console.log(authUser);\n        setUser(authUser); //keep u logged in //backened stuff\n\n        // if(authUser.displayName) {\n        //   //dont update username\n        // } else {\n        //     //if we just  created someone\n        //      //new user\n        //     return authUser.updateProfile ({\n        //       displayName : username,\n        //   });\n        // }\n      } else {\n        //user has logged out...\n        setUser(null);\n      }\n    });\n\n    return () => {\n      //perform some cleanup actions\n      unsubscribe();\n    };\n  }, [user, username]);\n\n  //UseEffect Runs a piece of code based on a specific condition\n  useEffect(() => {\n    //this is where the code runs\n    db.collection(\"posts\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) => {\n        //every time a new post added, this code fires...\n        //when someone push a post its gonna fire off setPosts to from that snapshot go get the docs\n        //(docs=> list of this ) map through every single one get each doc\n        setPosts(\n          snapshot.docs.map((doc) => ({\n            id: doc.id,\n            post: doc.data(),\n          }))\n        );\n      });\n  }, []); // [] says whatever the code is here run it once when page refreshes\n\n  const signUp = (event) => {\n    event.preventDefault();\n\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((authUser) => {\n        // then update the username\n        return authUser.user.updateProfile({\n          displayName: username,\n        });\n      })\n      .catch((error) => alert(error.message)); // if any error occur then catch it and set an alert show that message of error\n    //firebase giving me a backened validation\n    setOpen(false);\n  };\n\n  const signIn = (event) => {\n    event.preventDefault();\n\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .catch((error) => alert(error.message));\n\n    setOpenSignIn(false); // the modal which is pop up i want it to be close after sign up\n  };\n\n  return (\n    <div className=\"app\">\n      <Modal open={open} onClose={() => setOpen(false)}>\n        <div style={modalStyle} className={classes.paper}>\n          <form className=\"app__signup\">\n            <center>\n              <img\n                className=\"app__headerImage\"\n                src=\"https://serveroutagestatus.com/wp-content/uploads/2020/02/Instagram_Logo.png\"\n                alt=\"instagram\"\n              />\n            </center>\n            <Input\n              placeholder=\"username\"\n              type=\"text\"\n              value={username}\n              onChange={(e) => setUsername(e.target.value)}\n            />\n            <Input\n              placeholder=\"email\"\n              type=\"text\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <Input\n              placeholder=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <Button type=\"submit\" onClick={signUp}>\n              {\" \"}\n              Sign Up{\" \"}\n            </Button>\n          </form>\n        </div>\n      </Modal>\n\n      {/* we are logged in now we dont need username we only need email and pass */}\n      <Modal open={openSignIn} onClose={() => setOpenSignIn(false)}>\n        <div style={modalStyle} className={classes.paper}>\n          <form className=\"app__signup\">\n            <center>\n              <img\n                className=\"app__headerImage\"\n                src=\"https://serveroutagestatus.com/wp-content/uploads/2020/02/Instagram_Logo.png\"\n                alt=\"\"\n              />\n            </center>\n            <Input\n              placeholder=\"email\"\n              type=\"text\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <Input\n              placeholder=\"password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <Button type=\"submit\" onClick={signIn}>\n              {\" \"}\n              Sign In{\" \"}\n            </Button>\n          </form>\n        </div>\n      </Modal>\n\n      <div className=\"app__header\">\n        <img\n          className=\"app__headerImage\"\n          src=\"https://serveroutagestatus.com/wp-content/uploads/2020/02/Instagram_Logo.png\"\n          alt=\"instagram\"\n        />\n\n        {user ? (\n          <Button onClick={() => auth.signOut()}> Log out </Button>\n        ) : (\n          <div className=\"app__loginContainer\">\n            <Button onClick={() => setOpenSignIn(true)}>Sign In </Button>\n            <Button onClick={() => setOpen(true)}>Sign Up </Button>\n          </div>\n        )}\n      </div>\n\n       {/* NOTE  STORİES  */}\n       <div className=\"app__stories\">\n            <Avatar\n      className=\"post__avatar post__avatarstory\" \n      alt=\"+\"/* {username} */ \n      src=\"https://lumiere-a.akamaihd.net/v1/images/b_disneyprincess_updates_mobile_rapunzel_19273_5e2281e9.jpeg\" />\n              <Avatar\n      className=\"post__avatar post__avatarstory\" \n      alt=\"Piya\"/* {username} */ \n      src=\"https://images6.fanpop.com/image/photos/37300000/Walt-Disney-Princess-Rapunzel-tangled-37344671-1512-1288.png\" />\n      <Avatar\n      className=\"post__avatar post__avatarstory\" \n      alt=\"S\"/* {username} */ \n      src=\"https://i.pinimg.com/originals/47/b1/47/47b147b6d88fea4bcd32344251784b24.jpg\" />\n      </div>\n\n\n      {/* going to every single post in useState loooping through all single posts */}\n\n      <div className=\"app__posts\">\n        <div className=\"app__postsRight\">\n          {posts.map(({ id, post }) => (\n            <Post\n              key={post.id}\n              postId={id}\n              user={user}\n              username={post.username}\n              caption={post.caption}\n              imageUrl={post.imageUrl}\n            />\n          ))}\n        </div>\n          <div className=\"app__postsRight\">\n            <ReactPlayer\n              url=\"https://www.youtube.com/watch?v=iTAw1HK4z2M\"\n              className=\"react-player\"\n              playing\n              width=\"60vh\"\n              height=\"60vh\"\n            />\n        </div>\n      </div>\n\n\n      {/* <div className=\"app__postRight\">\n            <InstagramEmbed\n            url='https://www.instagram.com/p/B0N8QKuJZBV/'\n            maxWidth={320}\n            hideCaption={false}\n            containerTagName='div'\n            protocol=''\n            injectScript\n            onLoading={() => {}}\n            onSuccess={() => {}}\n            onAfterRender={() => {}}\n            onFailure={() => {}}\n             />\n\n     </div> */}\n\n      {user?.displayName ? (\n        <ImageUpload username={user.displayName} />\n      ) : (\n        <h3>Sorry you 🥺 need to login to upload</h3>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />,document.getElementById('root'));\n"],"sourceRoot":""}